import type { TextBlockDto } from '@stardust/core/global/entities/dtos'

export const texts: TextBlockDto[] = [
  {
    type: 'default',
    content:
      'Tenho m√°s not√≠cias. De acordo com a an√°lise das amostras, estamos em um planeta com o n√∫cleo bastante inst√°vel.',
    picture: 'panda-triste.jpg',
  },
  {
    type: 'user',
    content: 'E o que isso quer dizer?',
  },
  {
    type: 'default',
    content:
      'O que acontece √© que esse planeta n√£o tem mais vida longa, o que quer dizer que √© bom sairmos desse lugar imediatamente!',
    picture: 'panda-com-mochila.jpg',
  },
  {
    type: 'default',
    content:
      'Para come√ßar, podemos logo aumentar a pot√™ncia dos motores at√© chegarem ao m√°ximo da sua capacidade limite.',
    picture: 'panda-andando-com-bambu.jpg',
  },
  {
    type: 'default',
    content:
      'Para fazer isso, podemos criar um programa que, enquanto os motores n√£o chegarem ao seu limte (que √© *100*), continuaremos a aumentar sua pot√™ncia em 10.',
    picture: 'panda-andando-com-bambu.jpg',
  },
  {
    type: 'default',
    content:
      'Por√©m, ao come√ßar aumentar a pot√™ncia, √© ligado a vetoinha para evitar superaquecimento, mas apenas depois que a pot√™ncia √© aumentada por pelo menos uma vez.',
    picture: 'panda-andando-com-bambu.jpg',
  },
  {
    type: 'default',
    content:
      'E s√≥ podemos desligar a ventoinha depois que a pot√™ncia for igual ao limite.',
    picture: 'panda-piscando-sentado.jpg',
  },
  {
    type: 'default',
    content: 'Ent√£o temos uma situa√ß√£o complicada.',
    picture: 'panda-triste.jpg',
  },
  {
    type: 'code',
    content: `var potencia = 20
var limite = 100
var ventoinhaEstaLigada = falso

enquanto (ventoinhaEstaLigada) {
  potencia += 10

  se (potencia == limite) {
    ventoinhaEstaLigada = falso
  } senao {
    ventoinhaEstaLigada = verdadeiro
  }
}

escreva(potencia)
// Resultado: 20`,
    isRunnable: true,
  },
  {
    type: 'default',
    content: 'Percebeu que a conta n√£o fecha? ',
    picture: 'panda.jpg',
  },
  {
    type: 'default',
    content:
      'O processo de aumentar a pot√™ncia s√≥ para quando *ventoinhaEstaLigada* for *verdadeiro*, mas o valor dela, que come√ßa em *falso*, s√≥ muda a partir do momento em que eu come√ßo aumentar a pot√™ncia ü§®.',
    picture: 'panda-confuso.jpg',
  },
  {
    type: 'default',
    content:
      'Para resolver esse problema podemos usar o terceiro tipo de la√ßo: o *fazer enquanto*.',
    picture: 'panda-de-oculos.jpg',
  },
  {
    type: 'quote',
    title: 'La√ßo Fazer Enquanto',
    content:
      'O *fazer enquanto* √© um la√ßo que permite executar um bloco de c√≥digo pelo menos uma vez e depois repetir a execu√ß√£o desse bloco enquanto uma condi√ß√£o especificada for verdadeira.',
    picture: 'panda-de-oculos.jpg',
  },
  {
    type: 'default',
    content:
      'No nosso caso vai cair com uma luva, pois a condi√ß√£o do la√ßo √© verificada apenas ap√≥s seu bloco de c√≥digo ser executado pelo menos uma vez, permitindo que a condi√ß√£o (*ventoinhaEstaLigada*) seja falsa em um primeiro momento, veja:',
    picture: 'panda-deslumbrado.jpg',
  },
  {
    type: 'code',
    content: `var potencia = 20
var limite = 100
var ventoinhaEstaLigada = falso

fazer {
  potencia += 10

  se (potencia == limite) {
    ventoinhaEstaLigada = falso
  } senao {
    ventoinhaEstaLigada = verdadeiro
  }
} enquanto (ventoinhaEstaLigada)

escreva(potencia)
// Resultado: 100`,
    isRunnable: true,
  },
  {
    type: 'alert',
    content:
      'Ent√£o essa √© a diferen√ßa entre *enquanto* e *fazer enquanto*: o *fazer enquanto* garante que o bloco de c√≥digo seja executado pelo menos uma vez, mesmo se a condi√ß√£o do la√ßo inicialmente for *falso*, o que pode ser bastante √∫ltil em algumas situa√ß√µes como essa foi agora.',
    picture: 'panda-sorrindo.jpg',
  },
  {
    type: 'default',
    content:
      'Em contrapartida, o *enquanto* n√£o executa o bloco de c√≥digo se a condi√ß√£o especificada for falsa desde o in√≠cio.',
    picture: 'panda-olhando-de-lado.jpg',
  },
  {
    type: 'user',
    content: '√â cada uma meu.',
  },
  {
    type: 'image',
    content: 'Chegando √† atmosfera...',
    picture: 'foguete-decolando-perto-de-uma-montanha.jpg',
  },
  {
    type: 'default',
    content:
      '√Ä medida que subimos, estamos aumentando de velocidade e diminuindo a dist√¢ncia at√© o espa√ßo.',
    picture: 'panda-olhando-de-lado.jpg',
  },
  {
    type: 'code',
    content: `var velocidade = 0
var distanciaAteEspaco = 1500
var comprimentoDaOrbita = 500

enquanto (distanciaAteEspaco > 0) {
  velocidade++
  distanciaAteEspaco--
}`,
    isRunnable: false,
  },
  {
    type: 'default',
    content:
      'Por√©m, no momento que conseguirmos sairmos da atmosfera, temos que estabilizar a velocidade em um valor fixo para entrar em √≥rbita com o planeta e ent√£o acelerar de novo para pegar mais impulso para conseguirmos ir ainda mais longe.',
    picture: 'panda-olhando-computador.jpg',
  },
  {
    type: 'default',
    content: 'Saberia como resolver isso?',
    picture: 'panda-piscando.jpg',
  },
  {
    type: 'user',
    content: 'Usando `se senao`?',
  },
  {
    type: 'default',
    content: 'Pode ser uma boa, mas tem um jeito mais elegante de fazer isso em um la√ßo.',
    picture: 'panda-andando-com-bambu.jpg',
  },
  {
    type: 'default',
    content: 'Usando outra instru√ß√£o especial chamado de *continua*',
    picture: 'panda-andando-com-bambu.jpg',
  },
  {
    type: 'quote',
    title: 'Continua',
    content:
      'O *continua* √© um comando usada dentro de la√ßos, como o *pausa*, s√≥ que ele permite pular a intera√ß√£o atual e ir para a pr√≥xima imediatamente.',
    picture: 'panda-de-oculos.jpg',
  },
  {
    type: 'user',
    content: 'Como assim?',
  },
  {
    type: 'quote',
    content:
      'Quando o *continua* √© executado dentro de um la√ßo, o c√≥digo abaixo desse comando n√£o √© executado e a pr√≥xima itera√ß√£o do la√ßo √© iniciada.',
    picture: 'panda-de-oculos.jpg',
  },
  {
    type: 'default',
    content:
      'Isso pode ser √∫til em situa√ß√µes em que voc√™ deseja que parte de um bloco de c√≥digo seja ignorada em uma determinada situa√ß√£o.',
    picture: 'panda-fazendo-coracao.jpg',
  },
  {
    type: 'default',
    content:
      'Por exemplo, no nosso caso queremos que a vari√°vel *velocidade* pare de ser incrementada enquanto estivermos em √≥rbita com o planeta, o que ocorre enquanto *distanciaAteEspaco* for menor ou igual 1000 e *comprimentoDaOrbita* for maior que 0',
    picture: 'panda-sorrindo.jpg',
  },
  {
    type: 'code',
    content: `var velocidade = 50 
var distanciaAteEspaco = 1500
var comprimentoDaOrbita = 500
    
enquanto (distanciaAteEspaco > 0) {
  se (distanciaAteEspaco <= 1000 e comprimentoDaOrbita > 0) {
      comprimentoDaOrbita--
      continua
  }

  velocidade++
  distanciaAteEspaco--
}
    
escreva("distanciaAteEspaco: " + distanciaAteEspaco)
escreva("comprimentoDaOrbita: " + comprimentoDaOrbita)
escreva("velocidade: " + velocidade)


// Resultado: 
// distanciaAteEspaco: 0
// comprimentoDaOrbita: 0
// velocidade: 1550`,
    isRunnable: true,
  },
  {
    type: 'default',
    content:
      'Dessa forma, sempre que `distanciaAteEspaco` for menor ou igual que 1000 e `comprimentoDaOrbita` for maior que 0, tudo o que estiver ap√≥s isso, no caso `velocidade++` e `distanciaAteEspaco--` n√£o √© executado.',
    picture: 'panda-meditando.jpg',
  },
  {
    type: 'default',
    content: 'Caso contr√°rio, `comprimentoDaOrbita` ficaria com `-1000` no final üòØ.',
    picture: 'panda-espantado.jpg',
  },
  {
    type: 'code',
    content: `var velocidade = 50 
var distanciaAteEspaco = 1500
var comprimentoDaOrbita = 500
    
enquanto (distanciaAteEspaco > 0) {
  comprimentoDaOrbita--

  velocidade++
  distanciaAteEspaco--
}
    
escreva("distanciaAteEspaco: " + distanciaAteEspaco)
escreva("comprimentoDaOrbita: " + comprimentoDaOrbita)
escreva("velocidade: " + velocidade)


// Resultado: 
// distanciaAteEspaco: 0
// comprimentoDaOrbita: -1000
// velocidade: 1550`,
    isRunnable: true,
  },
  {
    type: 'user',
    content: 'Muito complicado para mim',
  },
  {
    type: 'default',
    content:
      'Vou colocar uma vari√°vel `vezes` para ajudar voc√™ a entender melhor o que est√° acontecendo.',
    picture: 'panda-olhando-de-lado.jpg',
  },
  {
    type: 'code',
    content: `var velocidade = 50 
var distanciaAteEspaco = 1500
var comprimentoDaOrbita = 500
var vezes = 0
    
enquanto (distanciaAteEspaco > 0) {
  vezes++

  se (distanciaAteEspaco <= 1000 e comprimentoDaOrbita > 0) {
      comprimentoDaOrbita--
      continua
  }

  velocidade++
  distanciaAteEspaco--
}
    
escreva("distanciaAteEspaco: " + distanciaAteEspaco)
escreva("comprimentoDaOrbita: " + comprimentoDaOrbita)
escreva("velocidade: " + velocidade)
escreva("vezes: " + vezes)


// Resultado: 
// distanciaAteEspaco: 0
// comprimentoDaOrbita: 0
// velocidade: 1550
// vezes: 2000`,
    isRunnable: true,
  },
  {
    type: 'default',
    content:
      'Veja que a vari√°vel *vezes* indica que o la√ßo *enquanto* foi executado 2000 vezes, por√©m a velocidade s√≥ foi aumentada em 1500 vezes.',
    picture: 'panda-olhando-computador.jpg',
  },
  {
    type: 'default',
    content:
      'Ou seja, nas vezes em que *continua* foi executado, *velocidade++* n√£o foi, justamente porque esse comando fez com que o la√ßo come√ßasse outra itera√ß√£o antes que ela fosse incrementada.',
    picture: 'panda-olhando-computador.jpg',
  },
  {
    type: 'default',
    content:
      'Ent√£o, resumidamente, o *continua* serve para pular uma repeti√ß√£o do la√ßo em um dado ponto do seu bloco de c√≥digo.',
    picture: 'panda-amando-bambu.jpg',
  },
  {
    type: 'user',
    content: 'Acho que entendi, talvez...',
  },
  {
    type: 'default',
    content: 'Com o tempo voc√™ pega o jeito, agora √© hora de se concentrar na fuga.',
    picture: 'panda.jpg',
  },
]
